{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import Particles from\"react-particles\";import{loadFull}from\"tsparticles\";import{jsx as _jsx}from\"react/jsx-runtime\";function BgAnimation(){// const [windowHeight, setHeight] = useState(window.innerHeight);\n//   useEffect(() => {\n//       if (window.innerWidth < 768) {\n//         setHeight(window.innerHeight+\"px\");\n//       }\n//       else\n//         setHeight(\"100%\");\n//     }, []);\nconst options={fullScreen:{enable:false},style:{position:\"absolute\",width:\"100%\",height:\"100%\"//   height: `${windowHeight}`,\n},particles:{number:{value:25,density:{enable:true,area:1000}},color:{value:[\"#247625\"]},shape:{type:\"circle\"},opacity:{value:1},size:{value:{min:1,max:8}},links:{enable:true,distance:150,color:\"#808080\",opacity:0.4,width:1},move:{enable:true,speed:2,direction:\"none\",random:false,straight:false,outModes:\"out\"}},interactivity:{events:{onHover:{enable:true,mode:\"grab\"},onClick:{enable:true,mode:\"push\"}},modes:{grab:{distance:140,links:{opacity:1}},push:{quantity:4}}}};const particlesInit=async engine=>{await loadFull(engine);};const particlesLoaded=async container=>{console.log(\"Particle containers loaded\",container);};return/*#__PURE__*/_jsx(Particles,{options:options,init:particlesInit,loaded:particlesLoaded});}export default BgAnimation;","map":{"version":3,"names":["React","useState","useEffect","Particles","loadFull","jsx","_jsx","BgAnimation","options","fullScreen","enable","style","position","width","height","particles","number","value","density","area","color","shape","type","opacity","size","min","max","links","distance","move","speed","direction","random","straight","outModes","interactivity","events","onHover","mode","onClick","modes","grab","push","quantity","particlesInit","engine","particlesLoaded","container","console","log","init","loaded"],"sources":["/Users/devyanigoil/Documents/devyanigoil.github.io/src/components/BgAnimation.js"],"sourcesContent":["import React , { useState, useEffect } from \"react\";\nimport Particles from \"react-particles\";\nimport { loadFull } from \"tsparticles\";\n\nfunction BgAnimation() {\n    // const [windowHeight, setHeight] = useState(window.innerHeight);\n\n//   useEffect(() => {\n//       if (window.innerWidth < 768) {\n//         setHeight(window.innerHeight+\"px\");\n//       }\n//       else\n//         setHeight(\"100%\");\n//     }, []);\n\n  const options = {\n    fullScreen: {\n      enable: false,\n    },\n    style: {\n      position: \"absolute\",\n      width: \"100%\",\n      height: \"100%\"\n    //   height: `${windowHeight}`,\n    },\n    particles: {\n      number: {\n        value: 25,\n        density: {\n          enable: true,\n          area: 1000\n        }\n      },\n      color: {\n        value: [\"#247625\"]\n      },\n      shape: {\n        type: \"circle\"\n      },\n      opacity: {\n        value: 1\n      },\n      size: {\n        value: { min: 1, max: 8 }\n      },\n      links: {\n        enable: true,\n        distance: 150,\n        color: \"#808080\",\n        opacity: 0.4,\n        width: 1\n      },\n      move: {\n        enable: true,\n        speed: 2,\n        direction: \"none\",\n        random: false,\n        straight: false,\n        outModes: \"out\"\n      }\n    },\n    interactivity: {\n      events: {\n        onHover: {\n          enable: true,\n          mode: \"grab\"\n        },\n        onClick: {\n          enable: true,\n          mode: \"push\"\n        }\n      },\n      modes: {\n        grab: {\n          distance: 140,\n          links: {\n            opacity: 1\n          }\n        },\n        push: {\n          quantity: 4\n        }\n      }\n    }\n  };\n\n  const particlesInit = async (engine) => {\n    await loadFull(engine);\n  };\n\n  const particlesLoaded = async (container) => {\n    console.log(\"Particle containers loaded\", container);\n  };\n\n  return (\n      <Particles options={options} init={particlesInit} loaded={particlesLoaded}/> \n  )\n}\n\nexport default BgAnimation;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAKC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CACnD,MAAO,CAAAC,SAAS,KAAM,iBAAiB,CACvC,OAASC,QAAQ,KAAQ,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEvC,QAAS,CAAAC,WAAWA,CAAA,CAAG,CACnB;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AAEE,KAAM,CAAAC,OAAO,CAAG,CACdC,UAAU,CAAE,CACVC,MAAM,CAAE,KACV,CAAC,CACDC,KAAK,CAAE,CACLC,QAAQ,CAAE,UAAU,CACpBC,KAAK,CAAE,MAAM,CACbC,MAAM,CAAE,MACV;AACA,CAAC,CACDC,SAAS,CAAE,CACTC,MAAM,CAAE,CACNC,KAAK,CAAE,EAAE,CACTC,OAAO,CAAE,CACPR,MAAM,CAAE,IAAI,CACZS,IAAI,CAAE,IACR,CACF,CAAC,CACDC,KAAK,CAAE,CACLH,KAAK,CAAE,CAAC,SAAS,CACnB,CAAC,CACDI,KAAK,CAAE,CACLC,IAAI,CAAE,QACR,CAAC,CACDC,OAAO,CAAE,CACPN,KAAK,CAAE,CACT,CAAC,CACDO,IAAI,CAAE,CACJP,KAAK,CAAE,CAAEQ,GAAG,CAAE,CAAC,CAAEC,GAAG,CAAE,CAAE,CAC1B,CAAC,CACDC,KAAK,CAAE,CACLjB,MAAM,CAAE,IAAI,CACZkB,QAAQ,CAAE,GAAG,CACbR,KAAK,CAAE,SAAS,CAChBG,OAAO,CAAE,GAAG,CACZV,KAAK,CAAE,CACT,CAAC,CACDgB,IAAI,CAAE,CACJnB,MAAM,CAAE,IAAI,CACZoB,KAAK,CAAE,CAAC,CACRC,SAAS,CAAE,MAAM,CACjBC,MAAM,CAAE,KAAK,CACbC,QAAQ,CAAE,KAAK,CACfC,QAAQ,CAAE,KACZ,CACF,CAAC,CACDC,aAAa,CAAE,CACbC,MAAM,CAAE,CACNC,OAAO,CAAE,CACP3B,MAAM,CAAE,IAAI,CACZ4B,IAAI,CAAE,MACR,CAAC,CACDC,OAAO,CAAE,CACP7B,MAAM,CAAE,IAAI,CACZ4B,IAAI,CAAE,MACR,CACF,CAAC,CACDE,KAAK,CAAE,CACLC,IAAI,CAAE,CACJb,QAAQ,CAAE,GAAG,CACbD,KAAK,CAAE,CACLJ,OAAO,CAAE,CACX,CACF,CAAC,CACDmB,IAAI,CAAE,CACJC,QAAQ,CAAE,CACZ,CACF,CACF,CACF,CAAC,CAED,KAAM,CAAAC,aAAa,CAAG,KAAO,CAAAC,MAAM,EAAK,CACtC,KAAM,CAAAzC,QAAQ,CAACyC,MAAM,CAAC,CACxB,CAAC,CAED,KAAM,CAAAC,eAAe,CAAG,KAAO,CAAAC,SAAS,EAAK,CAC3CC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAEF,SAAS,CAAC,CACtD,CAAC,CAED,mBACIzC,IAAA,CAACH,SAAS,EAACK,OAAO,CAAEA,OAAQ,CAAC0C,IAAI,CAAEN,aAAc,CAACO,MAAM,CAAEL,eAAgB,CAAC,CAAC,CAElF,CAEA,cAAe,CAAAvC,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}