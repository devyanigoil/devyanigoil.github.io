{"ast":null,"code":"var _jsxFileName = \"/Users/devyanigoil/Documents/devyanigoil.github.io/src/components/HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport Particles from \"react-particles\";\nimport { loadFull } from \"tsparticles\";\nimport './HomePage.css'; // CSS file for styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const options = {\n    particles: {\n      number: {\n        value: 80,\n        density: {\n          enable: true,\n          area: 800\n        }\n      },\n      color: {\n        value: [\"#2EB67D\", \"#ECB22E\", \"#E01E5B\", \"#36C5F0\"]\n      },\n      shape: {\n        type: \"circle\"\n      },\n      opacity: {\n        value: 1\n      },\n      size: {\n        value: {\n          min: 1,\n          max: 8\n        }\n      },\n      links: {\n        enable: true,\n        distance: 150,\n        color: \"#808080\",\n        opacity: 0.4,\n        width: 1\n      },\n      move: {\n        enable: true,\n        speed: 5,\n        direction: \"none\",\n        random: false,\n        straight: false,\n        outModes: \"out\"\n      }\n    },\n    interactivity: {\n      events: {\n        onHover: {\n          enable: true,\n          mode: \"grab\"\n        },\n        onClick: {\n          enable: true,\n          mode: \"push\"\n        }\n      },\n      modes: {\n        grab: {\n          distance: 140,\n          links: {\n            opacity: 1\n          }\n        },\n        push: {\n          quantity: 4\n        }\n      }\n    }\n  };\n  const particlesInit = useCallback(async engine => {\n    await loadFull(engine);\n  }, []);\n  const [text, setText] = useState(\"\"); // The text that is typed out\n  const [currentTextIndex, setCurrentTextIndex] = useState(0); // The current character index\n  const [isDeleting, setIsDeleting] = useState(false); // A flag to track deleting text\n  const [currentPhrase, setCurrentPhrase] = useState(\"Software Developer\"); // The current phrase being typed/deleted\n  const [cursorVisible, setCursorVisible] = useState(true); // A flag to control the cursor visibility\n\n  const phrases = [\"Software Engineer\", \"CS Masters Student\", \"Technology Enthusiast\"];\n  const typingSpeed = 100;\n  const deletingSpeed = 100;\n  const switchDelay = 2000; // Delay before starting to delete\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (isDeleting) {\n        // Deleting the text\n        setText(prev => prev.slice(0, prev.length - 1)); // Remove one character\n        setCurrentTextIndex(prev => prev - 1); // Update index\n      } else {\n        if (currentTextIndex < currentPhrase.length) {\n          // Typing the text (only if the index is within the length of the phrase)\n          setText(prev => prev + currentPhrase[currentTextIndex]); // Add one character\n          setCurrentTextIndex(prev => prev + 1); // Update index\n        }\n      }\n    }, isDeleting ? deletingSpeed : typingSpeed);\n\n    // Once a phrase is fully typed, start deleting after a delay\n    if (!isDeleting && currentTextIndex === currentPhrase.length) {\n      setTimeout(() => {\n        setIsDeleting(true); // Start deleting\n      }, switchDelay);\n    }\n\n    // Once deleting is done, switch to the next phrase\n    if (isDeleting && currentTextIndex === 0) {\n      const nextPhraseIndex = (phrases.indexOf(currentPhrase) + 1) % phrases.length;\n      setCurrentPhrase(phrases[nextPhraseIndex]); // Switch to the next phrase\n      setIsDeleting(false); // Stop deleting\n    }\n    return () => clearInterval(intervalId); // Cleanup the interval on component unmount\n  }, [currentTextIndex, isDeleting, currentPhrase]);\n  useEffect(() => {\n    const cursorInterval = setInterval(() => {\n      setCursorVisible(prev => !prev); // Toggle cursor visibility\n    }, 200);\n    return () => clearInterval(cursorInterval); // Cleanup the cursor interval\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homepage\",\n    children: [/*#__PURE__*/_jsxDEV(Particles, {\n      options: options,\n      init: particlesInit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hi! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"I'm Devyani\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"I am a \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 16\n      }, this), cursorVisible && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"cursor\",\n        children: \"|\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 27\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"/eXadoCjAbrj7+bkTVR/Z642GR4=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Particles","loadFull","jsxDEV","_jsxDEV","HomePage","_s","options","particles","number","value","density","enable","area","color","shape","type","opacity","size","min","max","links","distance","width","move","speed","direction","random","straight","outModes","interactivity","events","onHover","mode","onClick","modes","grab","push","quantity","particlesInit","engine","text","setText","currentTextIndex","setCurrentTextIndex","isDeleting","setIsDeleting","currentPhrase","setCurrentPhrase","cursorVisible","setCursorVisible","phrases","typingSpeed","deletingSpeed","switchDelay","intervalId","setInterval","prev","slice","length","setTimeout","nextPhraseIndex","indexOf","clearInterval","cursorInterval","className","children","init","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/devyanigoil/Documents/devyanigoil.github.io/src/components/HomePage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport Particles from \"react-particles\";\nimport { loadFull } from \"tsparticles\";\nimport './HomePage.css'; // CSS file for styles\n\nconst HomePage = () => {\n  const options = {\n    particles: {\n      number: {\n        value: 80,\n        density: {\n          enable: true,\n          area: 800\n        }\n      },\n      color: {\n        value: [\"#2EB67D\", \"#ECB22E\", \"#E01E5B\", \"#36C5F0\"]\n      },\n      shape: {\n        type: \"circle\"\n      },\n      opacity: {\n        value: 1\n      },\n      size: {\n        value: { min: 1, max: 8 }\n      },\n      links: {\n        enable: true,\n        distance: 150,\n        color: \"#808080\",\n        opacity: 0.4,\n        width: 1\n      },\n      move: {\n        enable: true,\n        speed: 5,\n        direction: \"none\",\n        random: false,\n        straight: false,\n        outModes: \"out\"\n      }\n    },\n    interactivity: {\n      events: {\n        onHover: {\n          enable: true,\n          mode: \"grab\"\n        },\n        onClick: {\n          enable: true,\n          mode: \"push\"\n        }\n      },\n      modes: {\n        grab: {\n          distance: 140,\n          links: {\n            opacity: 1\n          }\n        },\n        push: {\n          quantity: 4\n        }\n      }\n    }\n  };\n\n  const particlesInit = useCallback(async (engine) => {\n    await loadFull(engine);\n  }, []);\n\n  const [text, setText] = useState(\"\"); // The text that is typed out\n  const [currentTextIndex, setCurrentTextIndex] = useState(0); // The current character index\n  const [isDeleting, setIsDeleting] = useState(false); // A flag to track deleting text\n  const [currentPhrase, setCurrentPhrase] = useState(\"Software Developer\"); // The current phrase being typed/deleted\n  const [cursorVisible, setCursorVisible] = useState(true); // A flag to control the cursor visibility\n\n  const phrases = [\n    \"Software Engineer\",\n    \"CS Masters Student\",\n    \"Technology Enthusiast\",\n  ];\n\n  const typingSpeed = 100;\n  const deletingSpeed = 100;\n  const switchDelay = 2000; // Delay before starting to delete\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (isDeleting) {\n        // Deleting the text\n        setText((prev) => prev.slice(0, prev.length - 1)); // Remove one character\n        setCurrentTextIndex((prev) => prev - 1); // Update index\n      } else {\n        if (currentTextIndex < currentPhrase.length) {\n          // Typing the text (only if the index is within the length of the phrase)\n          setText((prev) => prev + currentPhrase[currentTextIndex]); // Add one character\n          setCurrentTextIndex((prev) => prev + 1); // Update index\n        }\n      }\n    }, isDeleting ? deletingSpeed : typingSpeed);\n\n    // Once a phrase is fully typed, start deleting after a delay\n    if (!isDeleting && currentTextIndex === currentPhrase.length) {\n      setTimeout(() => {\n        setIsDeleting(true); // Start deleting\n      }, switchDelay);\n    }\n\n    // Once deleting is done, switch to the next phrase\n    if (isDeleting && currentTextIndex === 0) {\n      const nextPhraseIndex = (phrases.indexOf(currentPhrase) + 1) % phrases.length;\n      setCurrentPhrase(phrases[nextPhraseIndex]); // Switch to the next phrase\n      setIsDeleting(false); // Stop deleting\n    }\n\n    return () => clearInterval(intervalId); // Cleanup the interval on component unmount\n  }, [currentTextIndex, isDeleting, currentPhrase]);\n\n  useEffect(() => {\n    const cursorInterval = setInterval(() => {\n      setCursorVisible((prev) => !prev); // Toggle cursor visibility\n    }, 200);\n\n    return () => clearInterval(cursorInterval); // Cleanup the cursor interval\n  }, []);\n\n  return (\n    <div className=\"homepage\">\n      <Particles options={options} init={particlesInit} />\n      <h1>Hi! </h1>\n      <h1>I'm Devyani</h1>\n      <h2>\n        I am a <span>{text}</span>\n        {cursorVisible && <span className=\"cursor\">|</span>} {/* Cursor */}\n      </h2>\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}