{"ast":null,"code":"var _jsxFileName = \"/Users/devyanigoil/Documents/devyanigoil.github.io/src/components/HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './HomePage.css'; // CSS file for styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [text, setText] = useState(\"\"); // The text that is typed out\n  const [currentTextIndex, setCurrentTextIndex] = useState(0); // The current character index\n  const [isDeleting, setIsDeleting] = useState(false); // A flag to track deleting text\n  const [currentPhrase, setCurrentPhrase] = useState(\"Software Developer\"); // The current phrase being typed/deleted\n  const [cursorVisible, setCursorVisible] = useState(true); // A flag to control the cursor visibility\n\n  const phrases = [\"Software Engineer\", \"CS Masters Student\", \"Technology Enthusiast\"];\n  const typingSpeed = 100;\n  const deletingSpeed = 100;\n  const switchDelay = 2000; // Delay before starting to delete\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (isDeleting) {\n        // Deleting the text\n        setText(prev => prev.slice(0, prev.length - 1)); // Remove one character\n        setCurrentTextIndex(prev => prev - 1); // Update index\n      } else {\n        if (currentTextIndex < currentPhrase.length) {\n          // Typing the text (only if the index is within the length of the phrase)\n          setText(prev => prev + currentPhrase[currentTextIndex]); // Add one character\n          setCurrentTextIndex(prev => prev + 1); // Update index\n        }\n      }\n    }, isDeleting ? deletingSpeed : typingSpeed);\n\n    // Once a phrase is fully typed, start deleting after a delay\n    if (!isDeleting && currentTextIndex === currentPhrase.length) {\n      setTimeout(() => {\n        setIsDeleting(true); // Start deleting\n      }, switchDelay);\n    }\n\n    // Once deleting is done, switch to the next phrase\n    if (isDeleting && currentTextIndex === 0) {\n      const nextPhraseIndex = (phrases.indexOf(currentPhrase) + 1) % phrases.length;\n      setCurrentPhrase(phrases[nextPhraseIndex]); // Switch to the next phrase\n      setIsDeleting(false); // Stop deleting\n    }\n    return () => clearInterval(intervalId); // Cleanup the interval on component unmount\n  }, [currentTextIndex, isDeleting, currentPhrase]);\n  useEffect(() => {\n    const cursorInterval = setInterval(() => {\n      setCursorVisible(prev => !prev); // Toggle cursor visibility\n    }, 200);\n    return () => clearInterval(cursorInterval); // Cleanup the cursor interval\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homepage\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hi! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"I'm Devyani\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"I am a \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 16\n      }, this), cursorVisible && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"cursor\",\n        children: \"|\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 27\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"malUrYZv759usxoYKQ5p3iPzzVg=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","HomePage","_s","text","setText","currentTextIndex","setCurrentTextIndex","isDeleting","setIsDeleting","currentPhrase","setCurrentPhrase","cursorVisible","setCursorVisible","phrases","typingSpeed","deletingSpeed","switchDelay","intervalId","setInterval","prev","slice","length","setTimeout","nextPhraseIndex","indexOf","clearInterval","cursorInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/devyanigoil/Documents/devyanigoil.github.io/src/components/HomePage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './HomePage.css'; // CSS file for styles\n\nconst HomePage = () => {\n  const [text, setText] = useState(\"\"); // The text that is typed out\n  const [currentTextIndex, setCurrentTextIndex] = useState(0); // The current character index\n  const [isDeleting, setIsDeleting] = useState(false); // A flag to track deleting text\n  const [currentPhrase, setCurrentPhrase] = useState(\"Software Developer\"); // The current phrase being typed/deleted\n  const [cursorVisible, setCursorVisible] = useState(true); // A flag to control the cursor visibility\n\n  const phrases = [\n    \"Software Engineer\",\n    \"CS Masters Student\",\n    \"Technology Enthusiast\",\n  ];\n\n  const typingSpeed = 100;\n  const deletingSpeed = 100;\n  const switchDelay = 2000; // Delay before starting to delete\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (isDeleting) {\n        // Deleting the text\n        setText((prev) => prev.slice(0, prev.length - 1)); // Remove one character\n        setCurrentTextIndex((prev) => prev - 1); // Update index\n      } else {\n        if (currentTextIndex < currentPhrase.length) {\n          // Typing the text (only if the index is within the length of the phrase)\n          setText((prev) => prev + currentPhrase[currentTextIndex]); // Add one character\n          setCurrentTextIndex((prev) => prev + 1); // Update index\n        }\n      }\n    }, isDeleting ? deletingSpeed : typingSpeed);\n\n    // Once a phrase is fully typed, start deleting after a delay\n    if (!isDeleting && currentTextIndex === currentPhrase.length) {\n      setTimeout(() => {\n        setIsDeleting(true); // Start deleting\n      }, switchDelay);\n    }\n\n    // Once deleting is done, switch to the next phrase\n    if (isDeleting && currentTextIndex === 0) {\n      const nextPhraseIndex = (phrases.indexOf(currentPhrase) + 1) % phrases.length;\n      setCurrentPhrase(phrases[nextPhraseIndex]); // Switch to the next phrase\n      setIsDeleting(false); // Stop deleting\n    }\n\n    return () => clearInterval(intervalId); // Cleanup the interval on component unmount\n  }, [currentTextIndex, isDeleting, currentPhrase]);\n\n  useEffect(() => {\n    const cursorInterval = setInterval(() => {\n      setCursorVisible((prev) => !prev); // Toggle cursor visibility\n    }, 200);\n\n    return () => clearInterval(cursorInterval); // Cleanup the cursor interval\n  }, []);\n\n  return (\n    <div className=\"homepage\">\n      <h1>Hi! </h1>\n      <h1>I'm Devyani</h1>\n      <h2>\n        I am a <span>{text}</span>\n        {cursorVisible && <span className=\"cursor\">|</span>} {/* Cursor */}\n      </h2>\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}