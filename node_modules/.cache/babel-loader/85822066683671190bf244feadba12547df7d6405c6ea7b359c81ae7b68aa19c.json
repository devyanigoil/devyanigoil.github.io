{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import'./HomePage.css';// CSS file for styles\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const HomePage=()=>{const[text,setText]=useState(\"\");// The text that is typed out\nconst[currentTextIndex,setCurrentTextIndex]=useState(0);// The current character index\nconst[isDeleting,setIsDeleting]=useState(false);// A flag to track deleting text\nconst[currentPhrase,setCurrentPhrase]=useState(\"Software Developer\");// The current phrase being typed/deleted\nconst[cursorVisible,setCursorVisible]=useState(true);// A flag to control the cursor visibility\nconst phrases=[\"Software Engineer\",\"CS Masters Student\",\"Technology Enthusiast\"];const typingSpeed=100;const deletingSpeed=100;const switchDelay=2000;// Delay before starting to delete\nuseEffect(()=>{const intervalId=setInterval(()=>{if(isDeleting){// Deleting the text\nsetText(prev=>prev.slice(0,prev.length-1));// Remove one character\nsetCurrentTextIndex(prev=>prev-1);// Update index\n}else{if(currentTextIndex<currentPhrase.length){// Typing the text (only if the index is within the length of the phrase)\nsetText(prev=>prev+currentPhrase[currentTextIndex]);// Add one character\nsetCurrentTextIndex(prev=>prev+1);// Update index\n}}},isDeleting?deletingSpeed:typingSpeed);// Once a phrase is fully typed, start deleting after a delay\nif(!isDeleting&&currentTextIndex===currentPhrase.length){setTimeout(()=>{setIsDeleting(true);// Start deleting\n},switchDelay);}// Once deleting is done, switch to the next phrase\nif(isDeleting&&currentTextIndex===0){const nextPhraseIndex=(phrases.indexOf(currentPhrase)+1)%phrases.length;setCurrentPhrase(phrases[nextPhraseIndex]);// Switch to the next phrase\nsetIsDeleting(false);// Stop deleting\n}return()=>clearInterval(intervalId);// Cleanup the interval on component unmount\n},[currentTextIndex,isDeleting,currentPhrase]);useEffect(()=>{const cursorInterval=setInterval(()=>{setCursorVisible(prev=>!prev);// Toggle cursor visibility\n},200);return()=>clearInterval(cursorInterval);// Cleanup the cursor interval\n},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"homepage\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Hi! \"}),/*#__PURE__*/_jsx(\"h1\",{children:\"I'm Devyani\"}),/*#__PURE__*/_jsxs(\"h2\",{children:[\"I am a \",/*#__PURE__*/_jsx(\"span\",{children:text}),cursorVisible&&/*#__PURE__*/_jsx(\"span\",{className:\"cursor\",children:\"|\"}),\" \"]}),/*#__PURE__*/_jsx(\"hr\",{})]});};export default HomePage;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","HomePage","text","setText","currentTextIndex","setCurrentTextIndex","isDeleting","setIsDeleting","currentPhrase","setCurrentPhrase","cursorVisible","setCursorVisible","phrases","typingSpeed","deletingSpeed","switchDelay","intervalId","setInterval","prev","slice","length","setTimeout","nextPhraseIndex","indexOf","clearInterval","cursorInterval","className","children"],"sources":["/Users/devyanigoil/Documents/devyanigoil.github.io/src/components/HomePage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './HomePage.css'; // CSS file for styles\n\nconst HomePage = () => {\n  const [text, setText] = useState(\"\"); // The text that is typed out\n  const [currentTextIndex, setCurrentTextIndex] = useState(0); // The current character index\n  const [isDeleting, setIsDeleting] = useState(false); // A flag to track deleting text\n  const [currentPhrase, setCurrentPhrase] = useState(\"Software Developer\"); // The current phrase being typed/deleted\n  const [cursorVisible, setCursorVisible] = useState(true); // A flag to control the cursor visibility\n\n  const phrases = [\n    \"Software Engineer\",\n    \"CS Masters Student\",\n    \"Technology Enthusiast\",\n  ];\n\n  const typingSpeed = 100;\n  const deletingSpeed = 100;\n  const switchDelay = 2000; // Delay before starting to delete\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (isDeleting) {\n        // Deleting the text\n        setText((prev) => prev.slice(0, prev.length - 1)); // Remove one character\n        setCurrentTextIndex((prev) => prev - 1); // Update index\n      } else {\n        if (currentTextIndex < currentPhrase.length) {\n          // Typing the text (only if the index is within the length of the phrase)\n          setText((prev) => prev + currentPhrase[currentTextIndex]); // Add one character\n          setCurrentTextIndex((prev) => prev + 1); // Update index\n        }\n      }\n    }, isDeleting ? deletingSpeed : typingSpeed);\n\n    // Once a phrase is fully typed, start deleting after a delay\n    if (!isDeleting && currentTextIndex === currentPhrase.length) {\n      setTimeout(() => {\n        setIsDeleting(true); // Start deleting\n      }, switchDelay);\n    }\n\n    // Once deleting is done, switch to the next phrase\n    if (isDeleting && currentTextIndex === 0) {\n      const nextPhraseIndex = (phrases.indexOf(currentPhrase) + 1) % phrases.length;\n      setCurrentPhrase(phrases[nextPhraseIndex]); // Switch to the next phrase\n      setIsDeleting(false); // Stop deleting\n    }\n\n    return () => clearInterval(intervalId); // Cleanup the interval on component unmount\n  }, [currentTextIndex, isDeleting, currentPhrase]);\n\n  useEffect(() => {\n    const cursorInterval = setInterval(() => {\n      setCursorVisible((prev) => !prev); // Toggle cursor visibility\n    }, 200);\n\n    return () => clearInterval(cursorInterval); // Cleanup the cursor interval\n  }, []);\n\n  return (\n    <div className=\"homepage\">\n      <h1>Hi! </h1>\n      <h1>I'm Devyani</h1>\n      <h2>\n        I am a <span>{text}</span>\n        {cursorVisible && <span className=\"cursor\">|</span>} {/* Cursor */}\n      </h2>\n      <hr></hr>\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}